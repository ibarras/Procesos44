{% extends 'layout.html.twig' %}

{% block content %}
    <style>
        input[type="text"], [type="number"]
        {
            font-size:14px;
        }
        table tr th{
            font-size: 12px;
        }
        tbody tr td {
            font-size: 12px;
        }


    </style>
    <div class="solicitud" id="show-solicitud-egreso">

        <div class="row">

            <div class="col">
                <label>Solicitante: <strong>{{ solicitud.idUsuarioSolicita.username }}</strong></label>
               <hr class="mt-0"/>
            </div>
            <div class="col">
                <label>Autorizado:<strong>{% if solicitud.idUsuarioSolicita.username is empty %} Pendiente de Autorizacion {% else %} {{ solicitud.idUsuarioSolicita.username }} {% endif %}</strong></label>
               <hr class="mt-0"/>
            </div>

        </div>

        <div class="row">
                <div class="col solicitud" >
                    <label>Solicitud:<strong>{{ (solicitud.IdTipoSolicitud) }}</strong> </label>
                   <hr class="mt-0"/>
                </div>
                <div class="col solicitud">
                    <label>Estatus: <strong>{{ solicitud.EsActivo  }} </strong></label>
                   <hr class="mt-0"/>
                </div>
           <hr class="mt-0"/>
        </div>

        <div class="row solicitud">
            <div class="col">
                <label>Creado: <strong>{{ solicitud.fecha |date('d/M/Y') }}</strong></label>
               <hr class="mt-0"/>
            </div>
            <div class="col">
                <label>Para Pago: <strong>{{ solicitud.fechaTransferencia | date('d/M/Y') }}</strong></label>
               <hr class="mt-0"/>
            </div>
        </div>

        <div class="row solicitud">
            <div class="col">
                <label>Importe:<strong>{{ solicitud.importe }}</strong></label>
               <hr class="mt-0"/>
            </div>
            <div class="col">
                <p>No Tarjeta: <strong>{{ solicitud.numeroTarjeta }}</strong></p>
               <hr class="mt-0"/>
            </div>
        </div>

        <div class="row solicitud">
            <div class="col">
                <label> Direccion: <strong>{{ solicitud.idDireccion }}</strong></label>
               <hr class="mt-0"/>
            </div>
            <div class="col">
                <label>Centro de Costo:<strong>{{ solicitud.idCentroOrganizativo }}</strong></label>
               <hr class="mt-0"/>
            </div>
        </div>

        <div class="row solicitud">
            <div class="col">
                <label>Torneo: <strong>{{ solicitud.idTorneo.nombre |upper }}</strong> </label>
                <hr class="mt-0"/>
            </div>
            <div class="col">
                <label>Categoria:<strong>{{ solicitud.idTorneoCategoria.nombre |upper }} </strong></label>
                <hr class="mt-0"/>
            </div>
        </div>

        <div class="row solicitud">
            <div class="col">
                <label>Motivo: <strong>{{ solicitud.motivoDeGasto }}</strong> </label>
                <hr class="mt-0"/>
            </div>
            <div class="col">
                <label>Jornada: <strong>{{ solicitud.idJornada.nombre |upper }}</strong></label>
                <hr class="mt-0"/>
            </div>
        </div>


        <div>

            <div class="row">

{#                <input type="text" :key="id" id="solicitud" value="{{solicitud.id}}">#}

                <div v-if="isHiddenDescripcion">
                    <h4 style="text-align: center">AGREGAR INFORMACION DE EGRESO </h4>
                    <hr>
                    <form class="form-inline" v-on:submit.prevent="postCapturaGastos" :key="id" id="solicitud" value="{{solicitud.id}}">

                        <div class="form-group mb-2 md-form">

                            <select class="custom-select d-block w-70" v-model="cuenta"
                                    v-on:change="onChangeCuentaContable(cuenta)" required>
                                <option disabled value="">Cuentas Contable</option>

                                <option v-for="cc in cuentasList" :value="cc.id">{! cc.nombre
                                    !}
                                </option>
                            </select>
                            <label for="firstName" class="mt-n5">Cuenta Contable </label>


                        </div>
                        <div class="form-group mx-sm-3 mb-2 md-form">
                            <input type="text" class="form-control" v-model="facturado" required placeholder="Descripcion (* Obligatorio )">
                        </div>
                        <div class="form-group mx-sm-3 mb-2 md-form">
                            <input  type="number" class="form-control" v-model="presupuesto" required placeholder="Presupuesto">
                        </div>
                        <div class="form-group mx-sm-3 mb-2 md-form">
                            <input  type="number" class="form-control" v-model="real" required placeholder="Precio Real">
                        </div>

                        <button v-on:submit.prevent="postCapturaGastos" class="btn btn-success btn-sm mb-2">Agregar</button>

                    </form>
                </div>

            </div>

            <div class="row" v-if="isInformacionGastosHidden">

               <hr class="mt-0"/>
                <table class="table">
                    <thead class="thead-light">
                    <tr>
                        <th scope="col">Cuenta Contable</th>
                        <th scope="col">Descripcion de la compra</th>
                        <th scope="col">Presupuesto</th>
                        <th scope="col">Precio</th>
                        <th scope="col">Variacion</th>
                        <th scope="col">Autorizado por</th>
                        <th scope="col">Acciones</th>
                    </tr>
                    </thead>
                    <tbody >

                    <tr v-for="item in EgresoDescripcionList"  >

                        <td><span class="badge badge-danger ml-2">{!item.id !}</span> {!item.cuenta !}</td>
                        <td>{!item.descripcion !}</td>
                        <td>{! item.presupuesto !}</td>
                        <td>{! item.precio_real !}</td>
                        <td>{! item.variacion !} </td>
                        <td v-if="item.autoriza">{! item.autoriza !} </td>
                        <td v-else>Sin autorizacion</td>

                        <td>
                            <button v-if="item.EsActivo == true" type="button" class="btn btn-primary btn-sm" data-toggle="modal"
                                    v-on:click="changeId(item)"  data-target="#my-modal-xl" >Deposito</button>
                            <button type="button" class="btn btn-danger btn-sm" v-on:click="onClickDeleteDescripcion(item.id)">Eliminar</button>
                        </td>
                    </tr>

                    <tr>
                        <td colspan="8">Total Presupuesto: <strong>{! TotalesDescripcion.presupuesto !}</strong> Precio Real: <strong>{! TotalesDescripcion.real !}</strong> Variacion <strong>{! TotalesDescripcion.variacion !}</strong>  </td>

                    </tr>
                    </tbody>
                </table>

               <hr class="mt-0"/>
                <table class="table">
                    <thead class="thead-light">
                    <tr >
                        <th  scope="col">Nombre del Proveedor</th>
                        <th scope="col">Cuenta Contable</th>
                        <th scope="col">Descripcion Compra</th>
                        <th scope="col">Tipo de gasto</th>
                        <th scope="col">No Cuenta / Clabe</th>
                        <th scope="col">Banco</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Acciones</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr v-for="item in DepositoList" >

                        <td><span class="badge badge-danger ml-2">{! item.IdSolicitudDescripcion !} </span>  {! item.Beneficiario!}</td>
                        <td>{! item.CuentaContable !}</td>
                        <td>{! item.TipoGasto !}</td>
                        <td>{! item.TipoGasto !}</td>
                        <td>{! item.Cuenta !}</td>
                        <td>{! item.Banco !}</td>
                        <td>{! item.Cantidad !} </td>

                        <td>
                            <button type="button" class="btn btn-danger btn-sm" v-on:click="onClickDeleteDeposito(item.id)">Eliminar</button>
                        </td>
                    </tr>

                    <tr>
                        <td colspan="3"><label>Importe Solicitado :<strong>{{ solicitud.importe }}</strong></label>
                           <label> Total Deposito: <strong>{! TotalDeposito !} </strong></label>
                        </td>
                    </tr>
                    </tbody>
                </table>


            </div>

            <div class="modal fade" id="my-modal-xl" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">DATOS DE DEPOSITO</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                        <form class="form-inline" v-on:submit.prevent="postCapturaFacturacion" :key="idDeposito">
                            <div class="form-group ">
                                <input type="text" class="form-control" v-model="proveedor" required placeholder="Nombre del Proveedor / Beneficiario">
                            </div>
                            <div class="form-group ">
                                <input type="text" class="form-control" v-model="tipoGasto" required placeholder="Facturado / Por comprobar ">
                            </div>
                            <div class="form-group">
                                <input  type="number" class="form-control" v-model="cuentaClabe" required placeholder="xxxx xxxx xxxx xxxx">
                            </div>
                            <div class="form-group ">
                                <input  type="text" class="form-control" v-model="banco" required placeholder="Nombre del Banco">
                            </div>

                            <button v-on:submit.prevent="postCapturaFacturacion" class="btn btn-success mb-2 btn-sm">Agregar</button>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                    </div>

                    </div>
                </div>
            </div>


        </div>
    </div>
{% endblock %}

{% block javascripts %}
        {{ parent() }}

    <script>
        new Vue({
            delimiters: ['{!', '!}'],
            el: '#show-solicitud-egreso',

            created: function () {
                this.onClickShowSolicitudEgresos();
                this.onChangeCuentaContable();
            },

            data: {

                EgresoList: [],
                TotalesDescripcion: [],
                cuentasList: [],
                TotalDeposito: '',

                // facturacion
                proveedor: '',
                tipoGasto: '',
                cuentaClabe: '',
                banco: '',

                // FacturacionList: [],
                DepositoList: [],
                EgresoDescripcionList: [],


                isInformacionHidden: false,
                isHiddenDescripcion: true,
                isDespositoHidden: false,
                isInformacionGastosHidden: true,

                cuenta: null,
                facturado: null,
                presupuesto: null,
                real: null,

                id: $("#solicitud").attr('value'),
                idDeposito: '',

            },
            mounted() {
            },
            watched: {},
            computed: {},

            methods: {

                changeId: function (item) {
                    let v = this.idDeposito = item.id;
                    console.log(item.id);
                    return this.idDeposito;

                },

                postCapturaFacturacion: function () {
                    const params = {
                        // facturacion
                        Proveedor: this.proveedor,
                        TipoGasto: this.tipoGasto,
                        CuentaClabe: this.cuentaClabe,
                        Banco: this.banco,
                        Deposito: this.idDeposito,

                    };

                    var url = '/nuevo-depositio-a-solicitud';

                    axios.post(url, params).then(response => {

                        this.onClickShowSolicitudEgresos();
                        this.onChangeCuentaContable();
                        $('#my-modal-xl').modal('hide');
                        this.errors = [];
                        this.proveedor = '',
                            this.tipoGasto = '',
                            this.cuentaClabe = '',
                            this.banco = ''

                    }).catch(error => {
                        this.errors = 'Corrija para poder crear con éxito'
                        console.log(error);
                    });
                },


                postCapturaGastos: function () {

                    const params = {
                        Cuenta: this.cuenta,
                        Facturado: this.facturado,
                        Presupuesto: this.presupuesto,
                        Real: this.real,
                        Total: this.total,
                        Id: this.id,
                    };

                    var url = '/nuevo-registro-egreso-descripcion';

                    axios.post(url, params).then(response => {
                        this.EgresoDescripcionList = response.data.descripcion;
                        //aqui totales
                        this.TotalesDescripcion = response.data.totales;

                        this.isFacturacionHidden = true;
                        this.isInformacionGastosHidden = true;
                        console.log(response.data);
                        this.errors = [];
                        //clear
                            this.cuenta = '',
                            this.facturado = '',
                            this.presupuesto = '',
                            this.real = ''

                    }).catch(error => {
                        this.errors = 'Corrija para poder crear con éxito';
                        console.log(error);
                    });
                },

                onChangeCuentaContable: function () {
                    let url = '/api/solicitud-egreso?opcion=cuentas-contables';

                    axios.get(url).then((response) => {
                        this.cuentasList = response.data;
                    }).catch(error => {
                        console.log(error);
                    })
                },


                onClickDeleteDescripcion: function (solicitud) {

                    if (confirm("Al eliminar la descripcion ELIMINARA EL DEPOSITO?")) {

                        let url = '/eliminar-descripcion-solicitud/' + solicitud;
                        axios.delete(url).then(response => {
                            this.onClickShowSolicitudEgresos();
                        }).catch(error => {
                            this.errors = 'Erro al obtener la inforamacion de las solicitudes';
                            console.log(error);
                        });
                    }
                },

                onClickDeleteDeposito: function (solicitud) {

                    if (confirm("ELIMINAR EL REGISTRO DE DEPOSITO?")) {

                        let url = '/eliminar-deposito-de-la-descripcion-solicitud/' + solicitud;

                        axios.delete(url).then(response => {
                            this.onClickShowSolicitudEgresos();
                        }).catch(error => {
                            this.errors = 'Erro al obtener la inforamacion de las solicitudes';
                            console.log(error);
                        });
                    }
                },

                onClickShowSolicitudEgresos: function () {

                    var item = $("#solicitud").attr('value')
                    this.isInformacionGastosHidden = true;
                    let url = '/mostrar-solicitud-egresos/' + item;
                    axios.get(url).then(response => {

                       // this.EgresoList = response.data.forma;
                        this.EgresoDescripcionList = response.data.descripcion;

                        this.TotalesDescripcion = response.data.totales;

                        if (response.data.deposito) {
                            this.isDespositoHidden = true;
                            this.DepositoList = response.data.deposito;
                            this.TotalDeposito = response.data.totalDeposito;
                        }
                        this.isGastosHidden = true;
                        console.log(response.data);

                    }).catch(error => {
                        this.errors = 'Erro al obtener la inforamacion de las solicitudes';
                        console.log(error);
                    });

                },
            }, //fin de methods

        })
        ;


    </script>

{% endblock %}